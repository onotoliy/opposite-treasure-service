/*
 * This file is generated by jOOQ.
 */
package com.github.onotoliy.opposite.treasure.jooq.tables;


import com.github.onotoliy.opposite.treasure.jooq.Indexes;
import com.github.onotoliy.opposite.treasure.jooq.Keys;
import com.github.onotoliy.opposite.treasure.jooq.Public;
import com.github.onotoliy.opposite.treasure.jooq.tables.records.TreasureNotificationRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * Транзакции
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TreasureNotification extends TableImpl<TreasureNotificationRecord> {

    private static final long serialVersionUID = -1601176670;

    /**
     * The reference instance of <code>public.treasure_notification</code>
     */
    public static final TreasureNotification TREASURE_NOTIFICATION = new TreasureNotification();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TreasureNotificationRecord> getRecordType() {
        return TreasureNotificationRecord.class;
    }

    /**
     * The column <code>public.treasure_notification.guid</code>. Уникальный идентификатор
     */
    public final TableField<TreasureNotificationRecord, UUID> GUID = createField("guid", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "Уникальный идентификатор");

    /**
     * The column <code>public.treasure_notification.name</code>. Заголовок
     */
    public final TableField<TreasureNotificationRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR, this, "Заголовок");

    /**
     * The column <code>public.treasure_notification.message</code>. Сообщение
     */
    public final TableField<TreasureNotificationRecord, String> MESSAGE = createField("message", org.jooq.impl.SQLDataType.VARCHAR, this, "Сообщение");

    /**
     * The column <code>public.treasure_notification.notification_type</code>. Тип уведомления
     */
    public final TableField<TreasureNotificationRecord, String> NOTIFICATION_TYPE = createField("notification_type", org.jooq.impl.SQLDataType.VARCHAR, this, "Тип уведомления");

    /**
     * The column <code>public.treasure_notification.executor</code>. Тип доставщика
     */
    public final TableField<TreasureNotificationRecord, String> EXECUTOR = createField("executor", org.jooq.impl.SQLDataType.VARCHAR, this, "Тип доставщика");

    /**
     * The column <code>public.treasure_notification.object_uuid</code>. Уникальный идентификатор объекта
     */
    public final TableField<TreasureNotificationRecord, UUID> OBJECT_UUID = createField("object_uuid", org.jooq.impl.SQLDataType.UUID, this, "Уникальный идентификатор объекта");

    /**
     * The column <code>public.treasure_notification.delivery_date</code>. Дата доставки
     */
    public final TableField<TreasureNotificationRecord, Timestamp> DELIVERY_DATE = createField("delivery_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "Дата доставки");

    /**
     * The column <code>public.treasure_notification.author</code>. Автор
     */
    public final TableField<TreasureNotificationRecord, UUID> AUTHOR = createField("author", org.jooq.impl.SQLDataType.UUID, this, "Автор");

    /**
     * The column <code>public.treasure_notification.creation_date</code>. Дата создания записи
     */
    public final TableField<TreasureNotificationRecord, Timestamp> CREATION_DATE = createField("creation_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "Дата создания записи");

    /**
     * The column <code>public.treasure_notification.deletion_date</code>. Дата удаления записи
     */
    public final TableField<TreasureNotificationRecord, Timestamp> DELETION_DATE = createField("deletion_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "Дата удаления записи");

    /**
     * Create a <code>public.treasure_notification</code> table reference
     */
    public TreasureNotification() {
        this(DSL.name("treasure_notification"), null);
    }

    /**
     * Create an aliased <code>public.treasure_notification</code> table reference
     */
    public TreasureNotification(String alias) {
        this(DSL.name(alias), TREASURE_NOTIFICATION);
    }

    /**
     * Create an aliased <code>public.treasure_notification</code> table reference
     */
    public TreasureNotification(Name alias) {
        this(alias, TREASURE_NOTIFICATION);
    }

    private TreasureNotification(Name alias, Table<TreasureNotificationRecord> aliased) {
        this(alias, aliased, null);
    }

    private TreasureNotification(Name alias, Table<TreasureNotificationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Транзакции"));
    }

    public <O extends Record> TreasureNotification(Table<O> child, ForeignKey<O, TreasureNotificationRecord> key) {
        super(child, key, TREASURE_NOTIFICATION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TREASURE_NOTIFICATION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TreasureNotificationRecord> getPrimaryKey() {
        return Keys.TREASURE_NOTIFICATION_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TreasureNotificationRecord>> getKeys() {
        return Arrays.<UniqueKey<TreasureNotificationRecord>>asList(Keys.TREASURE_NOTIFICATION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TreasureNotification as(String alias) {
        return new TreasureNotification(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TreasureNotification as(Name alias) {
        return new TreasureNotification(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TreasureNotification rename(String name) {
        return new TreasureNotification(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TreasureNotification rename(Name name) {
        return new TreasureNotification(name, null);
    }
}
