/*
 * This file is generated by jOOQ.
 */
package com.github.onotoliy.opposite.treasure.jooq.tables;


import com.github.onotoliy.opposite.treasure.jooq.Indexes;
import com.github.onotoliy.opposite.treasure.jooq.Keys;
import com.github.onotoliy.opposite.treasure.jooq.Public;
import com.github.onotoliy.opposite.treasure.jooq.tables.records.TreasureTransactionRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * Транзакции
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TreasureTransaction extends TableImpl<TreasureTransactionRecord> {

    private static final long serialVersionUID = -817272631;

    /**
     * The reference instance of <code>public.treasure_transaction</code>
     */
    public static final TreasureTransaction TREASURE_TRANSACTION = new TreasureTransaction();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TreasureTransactionRecord> getRecordType() {
        return TreasureTransactionRecord.class;
    }

    /**
     * The column <code>public.treasure_transaction.guid</code>.
     */
    public final TableField<TreasureTransactionRecord, UUID> GUID = createField("guid", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.treasure_transaction.name</code>. Название
     */
    public final TableField<TreasureTransactionRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "Название");

    /**
     * The column <code>public.treasure_transaction.cash</code>. Денежные средсва
     */
    public final TableField<TreasureTransactionRecord, BigDecimal> CASH = createField("cash", org.jooq.impl.SQLDataType.NUMERIC, this, "Денежные средсва");

    /**
     * The column <code>public.treasure_transaction.user_guid</code>. Пользователь
     */
    public final TableField<TreasureTransactionRecord, UUID> USER_GUID = createField("user_guid", org.jooq.impl.SQLDataType.UUID, this, "Пользователь");

    /**
     * The column <code>public.treasure_transaction.event_guid</code>. Событие
     */
    public final TableField<TreasureTransactionRecord, UUID> EVENT_GUID = createField("event_guid", org.jooq.impl.SQLDataType.UUID, this, "Событие");

    /**
     * The column <code>public.treasure_transaction.type</code>. Тип
     */
    public final TableField<TreasureTransactionRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(255), this, "Тип");

    /**
     * The column <code>public.treasure_transaction.author</code>. Автор
     */
    public final TableField<TreasureTransactionRecord, UUID> AUTHOR = createField("author", org.jooq.impl.SQLDataType.UUID, this, "Автор");

    /**
     * The column <code>public.treasure_transaction.creation_date</code>. Дата создания записи
     */
    public final TableField<TreasureTransactionRecord, Timestamp> CREATION_DATE = createField("creation_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "Дата создания записи");

    /**
     * The column <code>public.treasure_transaction.deletion_date</code>. Дата удаления записи
     */
    public final TableField<TreasureTransactionRecord, Timestamp> DELETION_DATE = createField("deletion_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "Дата удаления записи");

    /**
     * The column <code>public.treasure_transaction.transaction_date</code>. Дата совершения транзации
     */
    public final TableField<TreasureTransactionRecord, Timestamp> TRANSACTION_DATE = createField("transaction_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "Дата совершения транзации");

    /**
     * Create a <code>public.treasure_transaction</code> table reference
     */
    public TreasureTransaction() {
        this(DSL.name("treasure_transaction"), null);
    }

    /**
     * Create an aliased <code>public.treasure_transaction</code> table reference
     */
    public TreasureTransaction(String alias) {
        this(DSL.name(alias), TREASURE_TRANSACTION);
    }

    /**
     * Create an aliased <code>public.treasure_transaction</code> table reference
     */
    public TreasureTransaction(Name alias) {
        this(alias, TREASURE_TRANSACTION);
    }

    private TreasureTransaction(Name alias, Table<TreasureTransactionRecord> aliased) {
        this(alias, aliased, null);
    }

    private TreasureTransaction(Name alias, Table<TreasureTransactionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Транзакции"));
    }

    public <O extends Record> TreasureTransaction(Table<O> child, ForeignKey<O, TreasureTransactionRecord> key) {
        super(child, key, TREASURE_TRANSACTION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TREASURE_TRANSACTION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TreasureTransactionRecord> getPrimaryKey() {
        return Keys.TREASURE_TRANSACTION_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TreasureTransactionRecord>> getKeys() {
        return Arrays.<UniqueKey<TreasureTransactionRecord>>asList(Keys.TREASURE_TRANSACTION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TreasureTransactionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TreasureTransactionRecord, ?>>asList(Keys.TREASURE_TRANSACTION__FK_TT_EVENT);
    }

    public TreasureEvent treasureEvent() {
        return new TreasureEvent(this, Keys.TREASURE_TRANSACTION__FK_TT_EVENT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TreasureTransaction as(String alias) {
        return new TreasureTransaction(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TreasureTransaction as(Name alias) {
        return new TreasureTransaction(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TreasureTransaction rename(String name) {
        return new TreasureTransaction(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TreasureTransaction rename(Name name) {
        return new TreasureTransaction(name, null);
    }
}
