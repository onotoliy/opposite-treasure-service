/*
 * This file is generated by jOOQ.
 */
package com.github.onotoliy.opposite.treasure.jooq.tables;


import com.github.onotoliy.opposite.treasure.jooq.Indexes;
import com.github.onotoliy.opposite.treasure.jooq.Keys;
import com.github.onotoliy.opposite.treasure.jooq.Public;
import com.github.onotoliy.opposite.treasure.jooq.tables.records.TreasureDepositRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * Депозиты
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TreasureDeposit extends TableImpl<TreasureDepositRecord> {

    private static final long serialVersionUID = -541564829;

    /**
     * The reference instance of <code>public.treasure_deposit</code>
     */
    public static final TreasureDeposit TREASURE_DEPOSIT = new TreasureDeposit();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TreasureDepositRecord> getRecordType() {
        return TreasureDepositRecord.class;
    }

    /**
     * The column <code>public.treasure_deposit.user_uuid</code>. Пользователь
     */
    public final TableField<TreasureDepositRecord, UUID> USER_UUID = createField("user_uuid", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "Пользователь");

    /**
     * The column <code>public.treasure_deposit.deposit</code>. Депозит
     */
    public final TableField<TreasureDepositRecord, BigDecimal> DEPOSIT = createField("deposit", org.jooq.impl.SQLDataType.NUMERIC.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.NUMERIC)), this, "Депозит");

    /**
     * Create a <code>public.treasure_deposit</code> table reference
     */
    public TreasureDeposit() {
        this(DSL.name("treasure_deposit"), null);
    }

    /**
     * Create an aliased <code>public.treasure_deposit</code> table reference
     */
    public TreasureDeposit(String alias) {
        this(DSL.name(alias), TREASURE_DEPOSIT);
    }

    /**
     * Create an aliased <code>public.treasure_deposit</code> table reference
     */
    public TreasureDeposit(Name alias) {
        this(alias, TREASURE_DEPOSIT);
    }

    private TreasureDeposit(Name alias, Table<TreasureDepositRecord> aliased) {
        this(alias, aliased, null);
    }

    private TreasureDeposit(Name alias, Table<TreasureDepositRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Депозиты"));
    }

    public <O extends Record> TreasureDeposit(Table<O> child, ForeignKey<O, TreasureDepositRecord> key) {
        super(child, key, TREASURE_DEPOSIT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TREASURE_DEPOSIT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TreasureDepositRecord> getPrimaryKey() {
        return Keys.TREASURE_DEPOSIT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TreasureDepositRecord>> getKeys() {
        return Arrays.<UniqueKey<TreasureDepositRecord>>asList(Keys.TREASURE_DEPOSIT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TreasureDeposit as(String alias) {
        return new TreasureDeposit(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TreasureDeposit as(Name alias) {
        return new TreasureDeposit(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TreasureDeposit rename(String name) {
        return new TreasureDeposit(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TreasureDeposit rename(Name name) {
        return new TreasureDeposit(name, null);
    }
}
